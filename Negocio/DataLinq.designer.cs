#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.1
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Negocio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbclinica")]
	public partial class DataLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertDetalleTrabajo(DetalleTrabajo instance);
    partial void UpdateDetalleTrabajo(DetalleTrabajo instance);
    partial void DeleteDetalleTrabajo(DetalleTrabajo instance);
    partial void Inserttrabajo(trabajo instance);
    partial void Updatetrabajo(trabajo instance);
    partial void Deletetrabajo(trabajo instance);
    #endregion
		
		public DataLinqDataContext() : 
				base(global::Negocio.Properties.Settings.Default.dbclinicaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<DetalleTrabajo> DetalleTrabajo
		{
			get
			{
				return this.GetTable<DetalleTrabajo>();
			}
		}
		
		public System.Data.Linq.Table<trabajo> trabajo
		{
			get
			{
				return this.GetTable<trabajo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcliente;
		
		private string _nombre;
		
		private string _ap_paterno;
		
		private string _ap_materno;
		
		private string _ci;
		
		private string _direccion;
		
		private string _telefono;
		
		private EntitySet<DetalleTrabajo> _DetalleTrabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidclienteChanging(int value);
    partial void OnidclienteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onap_paternoChanging(string value);
    partial void Onap_paternoChanged();
    partial void Onap_maternoChanging(string value);
    partial void Onap_maternoChanged();
    partial void OnciChanging(string value);
    partial void OnciChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public Cliente()
		{
			this._DetalleTrabajo = new EntitySet<DetalleTrabajo>(new Action<DetalleTrabajo>(this.attach_DetalleTrabajo), new Action<DetalleTrabajo>(this.detach_DetalleTrabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcliente", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int idcliente
		{
			get
			{
				return this._idcliente;
			}
			set
			{
				if ((this._idcliente != value))
				{
					this.OnidclienteChanging(value);
					this.SendPropertyChanging();
					this._idcliente = value;
					this.SendPropertyChanged("idcliente");
					this.OnidclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_paterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ap_paterno
		{
			get
			{
				return this._ap_paterno;
			}
			set
			{
				if ((this._ap_paterno != value))
				{
					this.Onap_paternoChanging(value);
					this.SendPropertyChanging();
					this._ap_paterno = value;
					this.SendPropertyChanged("ap_paterno");
					this.Onap_paternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ap_materno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ap_materno
		{
			get
			{
				return this._ap_materno;
			}
			set
			{
				if ((this._ap_materno != value))
				{
					this.Onap_maternoChanging(value);
					this.SendPropertyChanging();
					this._ap_materno = value;
					this.SendPropertyChanged("ap_materno");
					this.Onap_maternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ci", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ci
		{
			get
			{
				return this._ci;
			}
			set
			{
				if ((this._ci != value))
				{
					this.OnciChanging(value);
					this.SendPropertyChanging();
					this._ci = value;
					this.SendPropertyChanged("ci");
					this.OnciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(200)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_DetalleTrabajo", Storage="_DetalleTrabajo", ThisKey="ci", OtherKey="idcliente")]
		public EntitySet<DetalleTrabajo> DetalleTrabajo
		{
			get
			{
				return this._DetalleTrabajo;
			}
			set
			{
				this._DetalleTrabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleTrabajo(DetalleTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_DetalleTrabajo(DetalleTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleTrabajo")]
	public partial class DetalleTrabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idtrabajo;
		
		private string _descripcion;
		
		private string _costo;
		
		private string _idcliente;
		
		private System.DateTime _fecha;
		
		private string _hora;
		
		private int _nropago;
		
		private int _monto;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<trabajo> _trabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidtrabajoChanging(int value);
    partial void OnidtrabajoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OncostoChanging(string value);
    partial void OncostoChanged();
    partial void OnidclienteChanging(string value);
    partial void OnidclienteChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnhoraChanging(string value);
    partial void OnhoraChanged();
    partial void OnnropagoChanging(int value);
    partial void OnnropagoChanged();
    partial void OnmontoChanging(int value);
    partial void OnmontoChanged();
    #endregion
		
		public DetalleTrabajo()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._trabajo = default(EntityRef<trabajo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtrabajo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idtrabajo
		{
			get
			{
				return this._idtrabajo;
			}
			set
			{
				if ((this._idtrabajo != value))
				{
					if (this._trabajo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidtrabajoChanging(value);
					this.SendPropertyChanging();
					this._idtrabajo = value;
					this.SendPropertyChanged("idtrabajo");
					this.OnidtrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string costo
		{
			get
			{
				return this._costo;
			}
			set
			{
				if ((this._costo != value))
				{
					this.OncostoChanging(value);
					this.SendPropertyChanging();
					this._costo = value;
					this.SendPropertyChanged("costo");
					this.OncostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcliente", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idcliente
		{
			get
			{
				return this._idcliente;
			}
			set
			{
				if ((this._idcliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidclienteChanging(value);
					this.SendPropertyChanging();
					this._idcliente = value;
					this.SendPropertyChanged("idcliente");
					this.OnidclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nropago", DbType="Int NOT NULL")]
		public int nropago
		{
			get
			{
				return this._nropago;
			}
			set
			{
				if ((this._nropago != value))
				{
					this.OnnropagoChanging(value);
					this.SendPropertyChanging();
					this._nropago = value;
					this.SendPropertyChanged("nropago");
					this.OnnropagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monto", DbType="Int NOT NULL")]
		public int monto
		{
			get
			{
				return this._monto;
			}
			set
			{
				if ((this._monto != value))
				{
					this.OnmontoChanging(value);
					this.SendPropertyChanging();
					this._monto = value;
					this.SendPropertyChanged("monto");
					this.OnmontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_DetalleTrabajo", Storage="_Cliente", ThisKey="idcliente", OtherKey="ci", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.DetalleTrabajo.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.DetalleTrabajo.Add(this);
						this._idcliente = value.ci;
					}
					else
					{
						this._idcliente = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trabajo_DetalleTrabajo", Storage="_trabajo", ThisKey="idtrabajo", OtherKey="idtrabajo", IsForeignKey=true)]
		public trabajo trabajo
		{
			get
			{
				return this._trabajo.Entity;
			}
			set
			{
				trabajo previousValue = this._trabajo.Entity;
				if (((previousValue != value) 
							|| (this._trabajo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trabajo.Entity = null;
						previousValue.DetalleTrabajo.Remove(this);
					}
					this._trabajo.Entity = value;
					if ((value != null))
					{
						value.DetalleTrabajo.Add(this);
						this._idtrabajo = value.idtrabajo;
					}
					else
					{
						this._idtrabajo = default(int);
					}
					this.SendPropertyChanged("trabajo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trabajo")]
	public partial class trabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idtrabajo;
		
		private string _descripcion;
		
		private string _precio;
		
		private EntitySet<DetalleTrabajo> _DetalleTrabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidtrabajoChanging(int value);
    partial void OnidtrabajoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnprecioChanging(string value);
    partial void OnprecioChanged();
    #endregion
		
		public trabajo()
		{
			this._DetalleTrabajo = new EntitySet<DetalleTrabajo>(new Action<DetalleTrabajo>(this.attach_DetalleTrabajo), new Action<DetalleTrabajo>(this.detach_DetalleTrabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtrabajo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idtrabajo
		{
			get
			{
				return this._idtrabajo;
			}
			set
			{
				if ((this._idtrabajo != value))
				{
					this.OnidtrabajoChanging(value);
					this.SendPropertyChanging();
					this._idtrabajo = value;
					this.SendPropertyChanged("idtrabajo");
					this.OnidtrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trabajo_DetalleTrabajo", Storage="_DetalleTrabajo", ThisKey="idtrabajo", OtherKey="idtrabajo")]
		public EntitySet<DetalleTrabajo> DetalleTrabajo
		{
			get
			{
				return this._DetalleTrabajo;
			}
			set
			{
				this._DetalleTrabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleTrabajo(DetalleTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.trabajo = this;
		}
		
		private void detach_DetalleTrabajo(DetalleTrabajo entity)
		{
			this.SendPropertyChanging();
			entity.trabajo = null;
		}
	}
}
#pragma warning restore 1591
